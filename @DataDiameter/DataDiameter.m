classdef (Abstract) DataDiameter < Data
%DataDiameter - Superclass for all DataDiameter classes
%
%   The DataDiameter class is an abstract superclass that implements (or
%   requires implementation in its subclasses via abstract methods or
%   properties) all basic functionality related to storing data from
%   diameter calculations.  Typically there is one concrete subclass of
%   DataDiameter for every concrete subclass of CalcDiameter, and the
%   DataDiameter object stores the algorithm-specific output data that is
%   generated by the corresponding CalcDiameter class.
%
% DataDiameter public properties inherited from Data:
%   mask            - A mask combining all of the other masks
%   means           - A helper structure containing means of the data
%   nPlotsGood      - The number of plots in non-debug mode        
%   nPlotsDebug     - The number of plots in debug mode
%   state           - The current state
%   stdevs          - A helper structure containing stdevs of the data
%
% DataDiameter public properties
%   diameter        - A time series vector of the vessel diameter [µm]
%   maskSTD         - Points outside the std range
%   time            - The time series vector [s]
%
% DataDiameter public methods:
%   add_raw_data    - Add raw data to the Data object
%   add_processed_data - Add processed data to the Data object
%   add_mask_data   - Add mask data to the Data object
%   plot            - Plot a single graph from the data object
%   plot_graphs     - Plot multiple graphs from the data object
%   output_data     - Output the data
%
%   See also DataDiameterFWHM, DataDiameterTiRS, Data, CalcDiameter,
%   LineScanDiam, FrameScan, XSectScan

%   Copyright (C) 2017  Matthew J.P. Barrett, Kim David Ferrari et al.
%
%   This program is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
% 
%   This program is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%   
%   You should have received a copy of the GNU General Public License 
%   along with this program.  If not, see <http://www.gnu.org/licenses/>.
    
    % ================================================================== %
    
    properties
        
        %time - The time series vector [s]
        %
        %   See also DataDiameter.diameter
        time
        
        %diameter - A time series vector of the vessel diameter [µm]
        %
        %   See also DataDiameter.time
        diameter
        
        %maskSTD - Points outside the std range
        %
        %   A logical vector of points that are more than
        %   thresholdSTD*std(diameter) away from median(diameter).
        %
        %   See also ConfigDiameterFWHM.thresholdSTD, 
        %   ConfigDiameterTiRS.thresholdSTD
        maskSTD
        
    end
    
    % ================================================================== %
    
    methods
        
        function self = set.time(self, val)
            utils.checks.rfv(val, 'time')
            self.time = val;
        end
        
        % -------------------------------------------------------------- %
        
        function self = set.diameter(self, val)
            maskNotNaN = ~isnan(val);
            utils.checks.rfv(val(maskNotNaN), 'diameter')
            utils.checks.positive(val(maskNotNaN), 'diameter')
            self.diameter = val;
        end
        
        % -------------------------------------------------------------- %
        
        function self = set.maskSTD(self, val)
            utils.checks.lv(val, 'maskSTD')
            self.maskSTD = val;
        end
        
    end
    
    % ================================================================== %
    
end
